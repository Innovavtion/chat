// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id             Int            @id @unique @default(autoincrement())
  login          String
  email          String         @unique
  password       String
  lastName       String
  firstName      String
  avatar         String?
  dataActive     DateTime       @updatedAt
  dataRegistrate DateTime       @default(now())
  Participants   Participants[]
  Messages       Messages[]
}

model Chats {
  id           Int            @id @unique @default(autoincrement())
  dataCreate   DateTime       @default(now())
  Participants Participants[]
  Messages     Messages[]
}

model Participants {
  id     Int   @id @unique @default(autoincrement())
  chat   Chats @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId Int
  user   Users @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model Messages {
  id        Int      @id @unique @default(autoincrement())
  chat      Chats    @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId    Int
  user      Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  text      String
  dataWrite DateTime @default(now())
}
