// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @unique @default(uuid())
  login          String        @unique
  email          String        @unique
  password       String?
  provider       Provider?
  lastName       String
  firstName      String
  avatar         String?
  dataActive     DateTime      @updatedAt
  dataRegistrate DateTime      @default(now())
  roles          Role[]        @default([USER])
  tokens         Token[]
  particapants   Participant[]
  messages       Message[]

  @@map("users")
}

model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  userAgent String   @map("user_agent")

  @@map("tokens")
}

model Chat {
  id           Int           @id @unique @default(autoincrement())
  dataCreate   DateTime      @default(now())
  particapants Participant[]
  messages     Message[]

  @@map("chats")
}

model Participant {
  id     Int    @id @unique @default(autoincrement())
  chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@map("participants")
}

model Message {
  id        Int      @id @unique @default(autoincrement())
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  text      String
  dataWrite DateTime @default(now())

  @@map("messages")
}

enum Role {
  ADMIN
  USER
}

enum Provider {
  GOOGLE
}
